% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dbcv.R
\name{dbcv}
\alias{dbcv}
\title{DBCV Metric Calculation}
\usage{
dbcv(
  X,
  y,
  metric = "euclidean",
  noise_id = -1,
  check_duplicates = FALSE,
  use_scipy_mst = FALSE,
  BPPARAM = BiocParallel::SerialParam(),
  ...
)
}
\arguments{
\item{X}{Numeric matrix of samples.}

\item{y}{Integer vector of cluster IDs.}

\item{metric}{String specifying the distance metric. \code{"sqeuclidean"}, or
possible \code{method} in \code{stats::dist()}. By default \code{"euclidean"}.}

\item{noise_id}{Integer, the cluster ID in \code{y} for noise (default \code{-1}).}

\item{check_duplicates}{Logical flag to check for duplicate samples.}

\item{use_scipy_mst}{Logical flag to use \code{scipy}'s Kruskal's MST
implementation. If \code{TRUE}, python is required, and this will reproduce the same results as
this python implementation of DBCV at \url{https://github.com/FelSiq/DBCV}.
If \code{FALSE}, use MST implementation in \code{igraph}.}

\item{BPPARAM}{BiocParallel params for multithreading (default none)}
}
\value{
A list:
\item{vcs}{Numeric vector of validity index for each cluster.}
\item{dbcv}{Numeric value representing the overall DBCV metric.}
}
\description{
Compute the DBCV (Density-Based Clustering Validation) metric.
}
\examples{
data <- noisy_moon
dbcv(data[, c("x", "y")], data$kmeans_label)
dbcv(data[, c("x", "y")], data$hdbscan_label)
}
\references{
Davoud Moulavi, et al. 2014; 10.1137/1.9781611973440.96.
}
